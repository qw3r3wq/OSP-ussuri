[DEFAULT]
#additional_architectures =
certificate_generation_ca = local
clean_nodes = true
cleanup = true
container_cli = podman
#container_healthcheck_disabled = false
# Aternatively, parameter "ContainerImagePrepare" to drive
# the required image preparation. (string value)
#container_images_file =
container_insecure_registries = ['10.40.1.254','10.40.1.254:8787']
#container_registry_mirror =
#deployment_user = <None>
discovery_default_driver = idrac
#enable_cinder = false
enable_ironic = true
enable_ironic_inspector = true
enable_mistral = true
enable_node_discovery = true
enable_nova = true
enable_novajoin = false
enable_routed_networks = true
#enable_swift_encryption = false
enable_telemetry = false
enable_tempest = false
enable_validations = false
enable_zaqar = true
enabled_hardware_types = ipmi,redfish,ilo,idrac

# When set to True, an SSL certificate will be generated as part of
# the undercloud install and this certificate will be used in place of
# the value for undercloud_service_certificate.  The resulting
# certificate will be written to
# /etc/pki/tls/certs/undercloud-[undercloud_public_host].pem.  This
# certificate is signed by CA selected by the
# "certificate_generation_ca" option. (boolean value)
#generate_service_certificate = true

heat_native = true
#heat_container_image =

#hieradata_override =
inspection_extras = true
inspection_interface = br-ctlplane
inspection_runbench = false
#ipa_otp =
#ipv6_address_mode = dhcpv6-stateless
ipxe_enabled = true
local_interface = ens4
local_ip = 10.40.1.254/24
local_mtu = 1500
local_subnet = ctlplane-subnet

# Path to network config override template.Relative paths get computed
# inside of $HOME. Must be in the json format.Its content overrides
# anything in t-h-t <role>NetConfigOverride. The processed template is
# then passed in Heat via the generated parameters file created in
# output_dir and used to configure the networking via run-os-net-
# config. If you wish to disable you can set this location to an empty
# file.Templated for instack j2 tags may be used, for example:
#
# "network_config": [
#  {
#   "type": "ovs_bridge",
#   "name": "br-ctlplane",
#   "ovs_extra": [
#    "br-set-external-id br-ctlplane bridge-id br-ctlplane"
#   ],
#   "members": [
#    {
#     "type": "interface",
#     "name": "{{LOCAL_INTERFACE}}",
#     "primary": "true",
#     "mtu": {{LOCAL_MTU}},
#     "dns_servers": {{UNDERCLOUD_NAMESERVERS}}
#    }
#   ],
#   "addresses": [
#     {
#       "ip_netmask": "{{PUBLIC_INTERFACE_IP}}"
#     }
#   ],
#   "routes": {{SUBNETS_STATIC_ROUTES}},
#   "mtu": {{LOCAL_MTU}}
# }
# ]
#   (string value)
#net_config_override =

# Networks file to override for heat. May be an absolute path or the
# path relative to the t-h-t templates directory used for deployment
# (string value)
#networks_file = <None>

output_dir = /home/stack/builddir

overcloud_domain_name = cloud.vgtu.lt
#roles_file = <None>
scheduler_max_attempts = 50
#service_principal =
##########subnets = ctlplane-subnet,remote-provision,remote-KI10
subnets = ctlplane-subnet
#templates =
undercloud_admin_host = 10.40.1.253
# 221

undercloud_public_host = 10.40.1.252
# 220

#undercloud_debug = true
undercloud_enable_paunch = false
undercloud_enable_selinux = true
undercloud_hostname = undercloudv3.vgtu.lt
undercloud_log_file = install-undercloud.log
undercloud_nameservers = 158.129.192.2
undercloud_ntp_servers = 0.pool.ntp.org,1.pool.ntp.org,2.pool.ntp.org,3.pool.ntp.org
#undercloud_service_certificate =
undercloud_timezone = Europe/Vilnius
undercloud_update_packages = true
#upgrade_cleanup = false


[ctlplane-subnet]
cidr = 10.40.1.0/24
dhcp_start = 10.40.1.205
dhcp_end = 10.40.1.229
#dhcp_exclude =
#dns_nameservers = 10.221.16.11,10.221.16.10
dns_nameservers = 158.129.192.2
#gateway = 10.40.1.254
#host_routes = [{destination: 10.10.10.0/24, nexthop: 192.168.24.1}]
inspection_iprange = 10.40.1.230,10.40.1.249
#masquerade = true

#[remote-provision]
#cidr = 10.41.94.240/28
#dhcp_start = 10.41.94.244
#dhcp_end = 10.41.94.246
#inspection_iprange = 10.41.94.247,10.41.94.249
#gateway = 10.41.94.241
#dns_nameservers = 150.132.95.40,150.132.95.20
#masquerade = false

#[remote-KI10]
#cidr = 10.68.210.0/24
#dhcp_start = 10.68.210.196
#dhcp_end = 10.68.210.240
#inspection_iprange = 10.68.210.241,10.68.210.249
#gateway = 10.68.210.1
#dns_nameservers = 150.132.95.40,150.132.95.20
#masquerade = false

