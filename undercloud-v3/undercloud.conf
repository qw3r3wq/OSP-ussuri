[DEFAULT]
#additional_architectures =
# The certmonger nickname of the CA from which the certificate will be
# requested. This is used only if the generate_service_certificate
# option is set. Note that if the "local" CA is selected the
# certmonger's local CA certificate will be extracted to /etc/pki/ca-
# trust/source/anchors/cm-local-ca.pem and subsequently added to the
# trust chain. (string value)
certificate_generation_ca = local
clean_nodes = true
cleanup = true
container_cli = podman
#container_healthcheck_disabled = false
# `openstack tripleo container image prepare default`
container_images_file = /home/stack/containers-prepare-parameters.yaml
container_insecure_registries = ['10.40.1.254','10.40.1.254:8787']
#container_registry_mirror =
custom_env_files = /home/stack/custom_env_files.yaml
#deployment_user = <None>
deployment_user = stack
discovery_default_driver = redfish
enable_cinder = false
enable_ironic = true
enable_ironic_inspector = true
enable_mistral = true
# Makes ironic-inspector enroll any unknown node that PXE-boots
# introspection ramdisk in Ironic. By default, the "fake" driver is
# used for new nodes (it is automatically enabled when this option is
# set to True). Set discovery_default_driver to override.
# Introspection rules can also be used to specify driver information
# for newly enrolled nodes. (boolean value)
enable_node_discovery = false
enable_nova = true
enable_novajoin = false
enable_routed_networks = true
#enable_swift_encryption = false
enable_telemetry = false
enable_tempest = false
enable_validations = false
enable_zaqar = true
enabled_hardware_types = ipmi,redfish,ilo,idrac

# When set to True, an SSL certificate will be generated as part of
# the undercloud install and this certificate will be used in place of
# the value for undercloud_service_certificate.  The resulting
# certificate will be written to
# /etc/pki/tls/private/overcloud_endpoint.pem. This certificate is
# signed by CA selected by the "certificate_generation_ca" option.
# (boolean value)
#generate_service_certificate = true

# URL for the heat container image to use. (string value)
#heat_container_image =

# Execute the heat-all process natively on this host. This option
# requires that the heat-all binaries be installed locally on this
# machine. This option is enabled by default which means heat-all is
# executed on the host OS  directly. (boolean value)
#heat_native = true

# Path to hieradata override file. Relative paths get computed inside
# of $HOME. When it points to a heat env file, it is passed in t-h-t
# via "-e <file>", as is. When the file contains legacy instack data,
# it is wrapped with UndercloudExtraConfig and also passed in for
# t-h-t as a temp file created in output_dir. Note, instack hiera data
# may be not t-h-t compatible and will highly likely require a manual
# revision. (string value)
#hieradata_override =

# Requires python-hardware or python-hardware-detect package
# on the introspection image. (boolean value)
inspection_extras = true
inspection_interface = br-ctlplane

# Requires inspection_extras set to True. (boolean value)
inspection_runbench = false

# One Time Password to register Undercloud node with an IPA server.
# Required when enable_novajoin = True. (string value)
#ipa_otp =

# IPv6 address configuration mode for the undercloud provisioning
# network. (string value)
# Possible values:
# dhcpv6-stateless - Address configuration using RA and optional
# information using DHCPv6.
# dhcpv6-stateful - Address configuration and optional information
# using DHCPv6.
#ipv6_address_mode = dhcpv6-stateless

ipxe_enabled = true

# Ironic network interface implementation to use by default. (string
# value)
# Possible values:
# flat - Use one flat provider network.
# neutron - Ironic interacts with Neutron to enable other network
# types and advanced networking features.
#ironic_default_network_interface = flat

# Enabled ironic network interface implementations. Each hardware type
# must have at least one valid implementation enabled. (list value)
#ironic_enabled_network_interfaces = flat

local_interface = ens4
undercloud_public_host = 10.40.1.252
undercloud_admin_host = 10.40.1.253
local_ip = 10.40.1.254/24
local_mtu = 1500
local_subnet = ctlplane-subnet

# Path to network config override template. Relative paths get
# computed inside of $HOME. Must be in the json format. Its content
# overrides anything in t-h-t <role>NetConfigOverride. The processed
# template is then passed in Heat via the generated parameters file
# created in output_dir and used to configure the networking via run-
# os-net-config. If you wish to disable you can set this location to
# an empty file. Templated for instack j2 tags may be used, for
# example:
#
# "network_config": [
#  {
#   "type": "ovs_bridge",
#   "name": "br-ctlplane",
#   "ovs_extra": [
#    "br-set-external-id br-ctlplane bridge-id br-ctlplane"
#   ],
#   "members": [
#    {
#     "type": "interface",
#     "name": "{{LOCAL_INTERFACE}}",
#     "primary": "true",
#     "mtu": {{LOCAL_MTU}},
#     "dns_servers": {{UNDERCLOUD_NAMESERVERS}}
#    }
#   ],
#   "addresses": [
#     {
#       "ip_netmask": "{{PUBLIC_INTERFACE_IP}}"
#     }
#   ],
#   "routes": {{SUBNETS_STATIC_ROUTES}},
#   "mtu": {{LOCAL_MTU}}
# }
# ]
#   (string value)
#net_config_override =

# Networks file to override for heat. May be an absolute path or the
# path relative to the t-h-t templates directory used for deployment
# (string value)
#networks_file = <None>

output_dir = /home/stack/builddir
overcloud_domain_name = v3.cloud.vgtu.lt
scheduler_max_attempts = 50
#service_principal =

# List of routed network subnets for provisioning and introspection.
# Comma separated list of names/tags. For each network a section/group
# needs to be added to the configuration file with these parameters
# set: cidr, dhcp_start, dhcp_end, inspection_iprange, gateway and
# masquerade_network. Note: The section/group must be placed before or
# after any other section. (See the example section [ctlplane-subnet]
# in the sample configuration file.) (list value)
subnets = ctlplane-subnet
#templates =
undercloud_debug = true
undercloud_enable_paunch = false
undercloud_enable_selinux = true
undercloud_hostname = undercloud.v3.cloud.vgtu.lt
undercloud_log_file = /home/stack/v3-install-undercloud.log
undercloud_nameservers = 158.129.192.2
undercloud_ntp_servers = 0.pool.ntp.org,1.pool.ntp.org,2.pool.ntp.org,3.pool.ntp.org,ntp.litnet.lt,ntp1.litnet.lt,ntp2.litnet.lt
#undercloud_service_certificate =
undercloud_timezone = Europe/Vilnius
undercloud_update_packages = false

[ctlplane-subnet]
cidr = 10.40.1.0/24
dhcp_start = 10.40.1.230
dhcp_end = 10.40.1.249
# Example: 192.168.24.50,192.168.24.80-192.168.24.90
#dhcp_exclude =
#dns_nameservers =
gateway = 10.40.1.254
#host_routes = [{destination: 10.10.10.0/24, nexthop: 192.168.24.1}]
inspection_iprange = 10.40.1.220,10.40.1.229
masquerade = true
